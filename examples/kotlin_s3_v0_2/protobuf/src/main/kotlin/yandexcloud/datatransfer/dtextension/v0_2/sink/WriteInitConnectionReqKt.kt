//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api/v0_2/sink/control.proto

package yandexcloud.datatransfer.dtextension.v0_2.sink;

@kotlin.jvm.JvmName("-initializewriteInitConnectionReq")
public inline fun writeInitConnectionReq(block: yandexcloud.datatransfer.dtextension.v0_2.sink.WriteInitConnectionReqKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.sink.Control.WriteInitConnectionReq =
  yandexcloud.datatransfer.dtextension.v0_2.sink.WriteInitConnectionReqKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.sink.Control.WriteInitConnectionReq.newBuilder()).apply { block() }._build()
public object WriteInitConnectionReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: yandexcloud.datatransfer.dtextension.v0_2.sink.Control.WriteInitConnectionReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.sink.Control.WriteInitConnectionReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.sink.Control.WriteInitConnectionReq = _builder.build()

    /**
     * <code>string json_settings = 1;</code>
     */
    public var jsonSettings: kotlin.String
      @JvmName("getJsonSettings")
      get() = _builder.getJsonSettings()
      @JvmName("setJsonSettings")
      set(value) {
        _builder.setJsonSettings(value)
      }
    /**
     * <code>string json_settings = 1;</code>
     */
    public fun clearJsonSettings() {
      _builder.clearJsonSettings()
    }

    /**
     * <code>string client_id = 2;</code>
     */
    public var clientId: kotlin.String
      @JvmName("getClientId")
      get() = _builder.getClientId()
      @JvmName("setClientId")
      set(value) {
        _builder.setClientId(value)
      }
    /**
     * <code>string client_id = 2;</code>
     */
    public fun clearClientId() {
      _builder.clearClientId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.sink.Control.WriteInitConnectionReq.copy(block: yandexcloud.datatransfer.dtextension.v0_2.sink.WriteInitConnectionReqKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.sink.Control.WriteInitConnectionReq =
  yandexcloud.datatransfer.dtextension.v0_2.sink.WriteInitConnectionReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

