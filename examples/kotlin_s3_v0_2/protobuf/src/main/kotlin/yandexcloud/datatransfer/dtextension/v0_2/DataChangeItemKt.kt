//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api/v0_2/data.proto

package yandexcloud.datatransfer.dtextension.v0_2;

@kotlin.jvm.JvmName("-initializedataChangeItem")
public inline fun dataChangeItem(block: yandexcloud.datatransfer.dtextension.v0_2.DataChangeItemKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.DataChangeItem =
  yandexcloud.datatransfer.dtextension.v0_2.DataChangeItemKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.DataChangeItem.newBuilder()).apply { block() }._build()
public object DataChangeItemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.DataChangeItem.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.DataChangeItem.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.DataChangeItem = _builder.build()

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Schema schema = 1;</code>
     */
    public var schema: yandexcloud.datatransfer.dtextension.v0_2.Data.Schema
      @JvmName("getSchema")
      get() = _builder.getSchema()
      @JvmName("setSchema")
      set(value) {
        _builder.setSchema(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Schema schema = 1;</code>
     */
    public fun clearSchema() {
      _builder.clearSchema()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Schema schema = 1;</code>
     * @return Whether the schema field is set.
     */
    public fun hasSchema(): kotlin.Boolean {
      return _builder.hasSchema()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.OpType type = 2;</code>
     */
    public var type: yandexcloud.datatransfer.dtextension.v0_2.Data.OpType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.OpType type = 2;</code>
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.PlainRow data = 11;</code>
     */
    public var data: yandexcloud.datatransfer.dtextension.v0_2.Data.PlainRow
      @JvmName("getData")
      get() = _builder.getData()
      @JvmName("setData")
      set(value) {
        _builder.setData(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.PlainRow data = 11;</code>
     */
    public fun clearData() {
      _builder.clearData()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.PlainRow data = 11;</code>
     * @return Whether the data field is set.
     */
    public fun hasData(): kotlin.Boolean {
      return _builder.hasData()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Parquet parquet = 12;</code>
     */
    public var parquet: yandexcloud.datatransfer.dtextension.v0_2.Data.Parquet
      @JvmName("getParquet")
      get() = _builder.getParquet()
      @JvmName("setParquet")
      set(value) {
        _builder.setParquet(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Parquet parquet = 12;</code>
     */
    public fun clearParquet() {
      _builder.clearParquet()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Parquet parquet = 12;</code>
     * @return Whether the parquet field is set.
     */
    public fun hasParquet(): kotlin.Boolean {
      return _builder.hasParquet()
    }
    public val formatCase: yandexcloud.datatransfer.dtextension.v0_2.Data.DataChangeItem.FormatCase
      @JvmName("getFormatCase")
      get() = _builder.getFormatCase()

    public fun clearFormat() {
      _builder.clearFormat()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.DataChangeItem.copy(block: yandexcloud.datatransfer.dtextension.v0_2.DataChangeItemKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.DataChangeItem =
  yandexcloud.datatransfer.dtextension.v0_2.DataChangeItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val yandexcloud.datatransfer.dtextension.v0_2.Data.DataChangeItemOrBuilder.schemaOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.Schema?
  get() = if (hasSchema()) getSchema() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.DataChangeItemOrBuilder.dataOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.PlainRow?
  get() = if (hasData()) getData() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.DataChangeItemOrBuilder.parquetOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.Parquet?
  get() = if (hasParquet()) getParquet() else null

