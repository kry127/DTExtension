//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api/v0_2/common.proto

package yandexcloud.datatransfer.dtextension.v0_2;

@kotlin.jvm.JvmName("-initializecolumnCursor")
public inline fun columnCursor(block: yandexcloud.datatransfer.dtextension.v0_2.ColumnCursorKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Common.ColumnCursor =
  yandexcloud.datatransfer.dtextension.v0_2.ColumnCursorKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Common.ColumnCursor.newBuilder()).apply { block() }._build()
public object ColumnCursorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Common.ColumnCursor.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Common.ColumnCursor.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Common.ColumnCursor = _builder.build()

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Column column = 1;</code>
     */
    public var column: yandexcloud.datatransfer.dtextension.v0_2.Data.Column
      @JvmName("getColumn")
      get() = _builder.getColumn()
      @JvmName("setColumn")
      set(value) {
        _builder.setColumn(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Column column = 1;</code>
     */
    public fun clearColumn() {
      _builder.clearColumn()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Column column = 1;</code>
     * @return Whether the column field is set.
     */
    public fun hasColumn(): kotlin.Boolean {
      return _builder.hasColumn()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.DataRange data_range = 2;</code>
     */
    public var dataRange: yandexcloud.datatransfer.dtextension.v0_2.Common.DataRange
      @JvmName("getDataRange")
      get() = _builder.getDataRange()
      @JvmName("setDataRange")
      set(value) {
        _builder.setDataRange(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.DataRange data_range = 2;</code>
     */
    public fun clearDataRange() {
      _builder.clearDataRange()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.DataRange data_range = 2;</code>
     * @return Whether the dataRange field is set.
     */
    public fun hasDataRange(): kotlin.Boolean {
      return _builder.hasDataRange()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Common.ColumnCursor.copy(block: yandexcloud.datatransfer.dtextension.v0_2.ColumnCursorKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Common.ColumnCursor =
  yandexcloud.datatransfer.dtextension.v0_2.ColumnCursorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val yandexcloud.datatransfer.dtextension.v0_2.Common.ColumnCursorOrBuilder.columnOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.Column?
  get() = if (hasColumn()) getColumn() else null

val yandexcloud.datatransfer.dtextension.v0_2.Common.ColumnCursorOrBuilder.dataRangeOrNull: yandexcloud.datatransfer.dtextension.v0_2.Common.DataRange?
  get() = if (hasDataRange()) getDataRange() else null

