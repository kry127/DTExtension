//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api/v0_2/data.proto

package yandexcloud.datatransfer.dtextension.v0_2;

@kotlin.jvm.JvmName("-initializedecimal")
public inline fun decimal(block: yandexcloud.datatransfer.dtextension.v0_2.DecimalKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal =
  yandexcloud.datatransfer.dtextension.v0_2.DecimalKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal.newBuilder()).apply { block() }._build()
public object DecimalKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal = _builder.build()

    /**
     * <code>string as_string = 1;</code>
     */
    public var asString: kotlin.String
      @JvmName("getAsString")
      get() = _builder.getAsString()
      @JvmName("setAsString")
      set(value) {
        _builder.setAsString(value)
      }
    /**
     * <code>string as_string = 1;</code>
     */
    public fun clearAsString() {
      _builder.clearAsString()
    }

    /**
     * <code>uint32 precision = 2;</code>
     */
    public var precision: kotlin.Int
      @JvmName("getPrecision")
      get() = _builder.getPrecision()
      @JvmName("setPrecision")
      set(value) {
        _builder.setPrecision(value)
      }
    /**
     * <code>uint32 precision = 2;</code>
     */
    public fun clearPrecision() {
      _builder.clearPrecision()
    }

    /**
     * <code>uint32 scale = 3;</code>
     */
    public var scale: kotlin.Int
      @JvmName("getScale")
      get() = _builder.getScale()
      @JvmName("setScale")
      set(value) {
        _builder.setScale(value)
      }
    /**
     * <code>uint32 scale = 3;</code>
     */
    public fun clearScale() {
      _builder.clearScale()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal.copy(block: yandexcloud.datatransfer.dtextension.v0_2.DecimalKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal =
  yandexcloud.datatransfer.dtextension.v0_2.DecimalKt.Dsl._create(this.toBuilder()).apply { block() }._build()

