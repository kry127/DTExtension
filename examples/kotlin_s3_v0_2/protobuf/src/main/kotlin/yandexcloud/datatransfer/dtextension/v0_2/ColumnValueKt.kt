//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api/v0_2/data.proto

package yandexcloud.datatransfer.dtextension.v0_2;

@kotlin.jvm.JvmName("-initializecolumnValue")
public inline fun columnValue(block: yandexcloud.datatransfer.dtextension.v0_2.ColumnValueKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ColumnValue =
  yandexcloud.datatransfer.dtextension.v0_2.ColumnValueKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.ColumnValue.newBuilder()).apply { block() }._build()
public object ColumnValueKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ColumnValue.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ColumnValue.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.ColumnValue = _builder.build()

    /**
     * <code>bool bool = 1;</code>
     */
    public var bool: kotlin.Boolean
      @JvmName("getBool")
      get() = _builder.getBool()
      @JvmName("setBool")
      set(value) {
        _builder.setBool(value)
      }
    /**
     * <code>bool bool = 1;</code>
     */
    public fun clearBool() {
      _builder.clearBool()
    }
    /**
     * <code>bool bool = 1;</code>
     * @return Whether the bool field is set.
     */
    public fun hasBool(): kotlin.Boolean {
      return _builder.hasBool()
    }

    /**
     * <code>int32 int32 = 2;</code>
     */
    public var int32: kotlin.Int
      @JvmName("getInt32")
      get() = _builder.getInt32()
      @JvmName("setInt32")
      set(value) {
        _builder.setInt32(value)
      }
    /**
     * <code>int32 int32 = 2;</code>
     */
    public fun clearInt32() {
      _builder.clearInt32()
    }
    /**
     * <code>int32 int32 = 2;</code>
     * @return Whether the int32 field is set.
     */
    public fun hasInt32(): kotlin.Boolean {
      return _builder.hasInt32()
    }

    /**
     * <code>int64 int64 = 3;</code>
     */
    public var int64: kotlin.Long
      @JvmName("getInt64")
      get() = _builder.getInt64()
      @JvmName("setInt64")
      set(value) {
        _builder.setInt64(value)
      }
    /**
     * <code>int64 int64 = 3;</code>
     */
    public fun clearInt64() {
      _builder.clearInt64()
    }
    /**
     * <code>int64 int64 = 3;</code>
     * @return Whether the int64 field is set.
     */
    public fun hasInt64(): kotlin.Boolean {
      return _builder.hasInt64()
    }

    /**
     * <code>uint32 uint32 = 4;</code>
     */
    public var uint32: kotlin.Int
      @JvmName("getUint32")
      get() = _builder.getUint32()
      @JvmName("setUint32")
      set(value) {
        _builder.setUint32(value)
      }
    /**
     * <code>uint32 uint32 = 4;</code>
     */
    public fun clearUint32() {
      _builder.clearUint32()
    }
    /**
     * <code>uint32 uint32 = 4;</code>
     * @return Whether the uint32 field is set.
     */
    public fun hasUint32(): kotlin.Boolean {
      return _builder.hasUint32()
    }

    /**
     * <code>uint64 uint64 = 5;</code>
     */
    public var uint64: kotlin.Long
      @JvmName("getUint64")
      get() = _builder.getUint64()
      @JvmName("setUint64")
      set(value) {
        _builder.setUint64(value)
      }
    /**
     * <code>uint64 uint64 = 5;</code>
     */
    public fun clearUint64() {
      _builder.clearUint64()
    }
    /**
     * <code>uint64 uint64 = 5;</code>
     * @return Whether the uint64 field is set.
     */
    public fun hasUint64(): kotlin.Boolean {
      return _builder.hasUint64()
    }

    /**
     * <code>float float = 6;</code>
     */
    public var float: kotlin.Float
      @JvmName("getFloat")
      get() = _builder.getFloat()
      @JvmName("setFloat")
      set(value) {
        _builder.setFloat(value)
      }
    /**
     * <code>float float = 6;</code>
     */
    public fun clearFloat() {
      _builder.clearFloat()
    }
    /**
     * <code>float float = 6;</code>
     * @return Whether the float field is set.
     */
    public fun hasFloat(): kotlin.Boolean {
      return _builder.hasFloat()
    }

    /**
     * <code>double double = 7;</code>
     */
    public var double: kotlin.Double
      @JvmName("getDouble")
      get() = _builder.getDouble()
      @JvmName("setDouble")
      set(value) {
        _builder.setDouble(value)
      }
    /**
     * <code>double double = 7;</code>
     */
    public fun clearDouble() {
      _builder.clearDouble()
    }
    /**
     * <code>double double = 7;</code>
     * @return Whether the double field is set.
     */
    public fun hasDouble(): kotlin.Boolean {
      return _builder.hasDouble()
    }

    /**
     * <code>string json = 8;</code>
     */
    public var json: kotlin.String
      @JvmName("getJson")
      get() = _builder.getJson()
      @JvmName("setJson")
      set(value) {
        _builder.setJson(value)
      }
    /**
     * <code>string json = 8;</code>
     */
    public fun clearJson() {
      _builder.clearJson()
    }
    /**
     * <code>string json = 8;</code>
     * @return Whether the json field is set.
     */
    public fun hasJson(): kotlin.Boolean {
      return _builder.hasJson()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Decimal decimal = 9;</code>
     */
    public var decimal: yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal
      @JvmName("getDecimal")
      get() = _builder.getDecimal()
      @JvmName("setDecimal")
      set(value) {
        _builder.setDecimal(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Decimal decimal = 9;</code>
     */
    public fun clearDecimal() {
      _builder.clearDecimal()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Decimal decimal = 9;</code>
     * @return Whether the decimal field is set.
     */
    public fun hasDecimal(): kotlin.Boolean {
      return _builder.hasDecimal()
    }

    /**
     * <code>string big_decimal = 10;</code>
     */
    public var bigDecimal: kotlin.String
      @JvmName("getBigDecimal")
      get() = _builder.getBigDecimal()
      @JvmName("setBigDecimal")
      set(value) {
        _builder.setBigDecimal(value)
      }
    /**
     * <code>string big_decimal = 10;</code>
     */
    public fun clearBigDecimal() {
      _builder.clearBigDecimal()
    }
    /**
     * <code>string big_decimal = 10;</code>
     * @return Whether the bigDecimal field is set.
     */
    public fun hasBigDecimal(): kotlin.Boolean {
      return _builder.hasBigDecimal()
    }

    /**
     * <code>string big_integer = 11;</code>
     */
    public var bigInteger: kotlin.String
      @JvmName("getBigInteger")
      get() = _builder.getBigInteger()
      @JvmName("setBigInteger")
      set(value) {
        _builder.setBigInteger(value)
      }
    /**
     * <code>string big_integer = 11;</code>
     */
    public fun clearBigInteger() {
      _builder.clearBigInteger()
    }
    /**
     * <code>string big_integer = 11;</code>
     * @return Whether the bigInteger field is set.
     */
    public fun hasBigInteger(): kotlin.Boolean {
      return _builder.hasBigInteger()
    }

    /**
     * <code>int64 unix_time = 12;</code>
     */
    public var unixTime: kotlin.Long
      @JvmName("getUnixTime")
      get() = _builder.getUnixTime()
      @JvmName("setUnixTime")
      set(value) {
        _builder.setUnixTime(value)
      }
    /**
     * <code>int64 unix_time = 12;</code>
     */
    public fun clearUnixTime() {
      _builder.clearUnixTime()
    }
    /**
     * <code>int64 unix_time = 12;</code>
     * @return Whether the unixTime field is set.
     */
    public fun hasUnixTime(): kotlin.Boolean {
      return _builder.hasUnixTime()
    }

    /**
     * <code>string iso_time = 13;</code>
     */
    public var isoTime: kotlin.String
      @JvmName("getIsoTime")
      get() = _builder.getIsoTime()
      @JvmName("setIsoTime")
      set(value) {
        _builder.setIsoTime(value)
      }
    /**
     * <code>string iso_time = 13;</code>
     */
    public fun clearIsoTime() {
      _builder.clearIsoTime()
    }
    /**
     * <code>string iso_time = 13;</code>
     * @return Whether the isoTime field is set.
     */
    public fun hasIsoTime(): kotlin.Boolean {
      return _builder.hasIsoTime()
    }

    /**
     * <code>string string = 14;</code>
     */
    public var string: kotlin.String
      @JvmName("getString")
      get() = _builder.getString()
      @JvmName("setString")
      set(value) {
        _builder.setString(value)
      }
    /**
     * <code>string string = 14;</code>
     */
    public fun clearString() {
      _builder.clearString()
    }
    /**
     * <code>string string = 14;</code>
     * @return Whether the string field is set.
     */
    public fun hasString(): kotlin.Boolean {
      return _builder.hasString()
    }

    /**
     * <code>bytes binary = 15;</code>
     */
    public var binary: com.google.protobuf.ByteString
      @JvmName("getBinary")
      get() = _builder.getBinary()
      @JvmName("setBinary")
      set(value) {
        _builder.setBinary(value)
      }
    /**
     * <code>bytes binary = 15;</code>
     */
    public fun clearBinary() {
      _builder.clearBinary()
    }
    /**
     * <code>bytes binary = 15;</code>
     * @return Whether the binary field is set.
     */
    public fun hasBinary(): kotlin.Boolean {
      return _builder.hasBinary()
    }
    public val dataCase: yandexcloud.datatransfer.dtextension.v0_2.Data.ColumnValue.DataCase
      @JvmName("getDataCase")
      get() = _builder.getDataCase()

    public fun clearData() {
      _builder.clearData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.ColumnValue.copy(block: yandexcloud.datatransfer.dtextension.v0_2.ColumnValueKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ColumnValue =
  yandexcloud.datatransfer.dtextension.v0_2.ColumnValueKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val yandexcloud.datatransfer.dtextension.v0_2.Data.ColumnValueOrBuilder.decimalOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal?
  get() = if (hasDecimal()) getDecimal() else null

