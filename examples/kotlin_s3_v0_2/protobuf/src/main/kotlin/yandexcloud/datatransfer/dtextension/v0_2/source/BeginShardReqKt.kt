//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api/v0_2/source/control.proto

package yandexcloud.datatransfer.dtextension.v0_2.source;

@kotlin.jvm.JvmName("-initializebeginShardReq")
public inline fun beginShardReq(block: yandexcloud.datatransfer.dtextension.v0_2.source.BeginShardReqKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.source.Control.BeginShardReq =
  yandexcloud.datatransfer.dtextension.v0_2.source.BeginShardReqKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.source.Control.BeginShardReq.newBuilder()).apply { block() }._build()
public object BeginShardReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: yandexcloud.datatransfer.dtextension.v0_2.source.Control.BeginShardReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.source.Control.BeginShardReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.source.Control.BeginShardReq = _builder.build()

    /**
     * <code>bytes snapshot_state = 1;</code>
     */
    public var snapshotState: com.google.protobuf.ByteString
      @JvmName("getSnapshotState")
      get() = _builder.getSnapshotState()
      @JvmName("setSnapshotState")
      set(value) {
        _builder.setSnapshotState(value)
      }
    /**
     * <code>bytes snapshot_state = 1;</code>
     */
    public fun clearSnapshotState() {
      _builder.clearSnapshotState()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.source.Control.BeginShardReq.copy(block: yandexcloud.datatransfer.dtextension.v0_2.source.BeginShardReqKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.source.Control.BeginShardReq =
  yandexcloud.datatransfer.dtextension.v0_2.source.BeginShardReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

