//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api/v0_2/source/source_service.proto

package yandexcloud.datatransfer.dtextension.v0_2.source;

@kotlin.jvm.JvmName("-initializediscoverRsp")
public inline fun discoverRsp(block: yandexcloud.datatransfer.dtextension.v0_2.source.DiscoverRspKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.source.SourceServiceOuterClass.DiscoverRsp =
  yandexcloud.datatransfer.dtextension.v0_2.source.DiscoverRspKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.source.SourceServiceOuterClass.DiscoverRsp.newBuilder()).apply { block() }._build()
public object DiscoverRspKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: yandexcloud.datatransfer.dtextension.v0_2.source.SourceServiceOuterClass.DiscoverRsp.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.source.SourceServiceOuterClass.DiscoverRsp.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.source.SourceServiceOuterClass.DiscoverRsp = _builder.build()

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Result result = 1;</code>
     */
    public var result: yandexcloud.datatransfer.dtextension.v0_2.Common.Result
      @JvmName("getResult")
      get() = _builder.getResult()
      @JvmName("setResult")
      set(value) {
        _builder.setResult(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Result result = 1;</code>
     */
    public fun clearResult() {
      _builder.clearResult()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Result result = 1;</code>
     * @return Whether the result field is set.
     */
    public fun hasResult(): kotlin.Boolean {
      return _builder.hasResult()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TablesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Table tables = 2;</code>
     */
     public val tables: com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Table, TablesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTablesList()
      )
    /**
     * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Table tables = 2;</code>
     * @param value The tables to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTables")
    public fun com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Table, TablesProxy>.add(value: yandexcloud.datatransfer.dtextension.v0_2.Data.Table) {
      _builder.addTables(value)
    }
    /**
     * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Table tables = 2;</code>
     * @param value The tables to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTables")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Table, TablesProxy>.plusAssign(value: yandexcloud.datatransfer.dtextension.v0_2.Data.Table) {
      add(value)
    }
    /**
     * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Table tables = 2;</code>
     * @param values The tables to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTables")
    public fun com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Table, TablesProxy>.addAll(values: kotlin.collections.Iterable<yandexcloud.datatransfer.dtextension.v0_2.Data.Table>) {
      _builder.addAllTables(values)
    }
    /**
     * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Table tables = 2;</code>
     * @param values The tables to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTables")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Table, TablesProxy>.plusAssign(values: kotlin.collections.Iterable<yandexcloud.datatransfer.dtextension.v0_2.Data.Table>) {
      addAll(values)
    }
    /**
     * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Table tables = 2;</code>
     * @param index The index to set the value at.
     * @param value The tables to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTables")
    public operator fun com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Table, TablesProxy>.set(index: kotlin.Int, value: yandexcloud.datatransfer.dtextension.v0_2.Data.Table) {
      _builder.setTables(index, value)
    }
    /**
     * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Table tables = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTables")
    public fun com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Table, TablesProxy>.clear() {
      _builder.clearTables()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.source.SourceServiceOuterClass.DiscoverRsp.copy(block: yandexcloud.datatransfer.dtextension.v0_2.source.DiscoverRspKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.source.SourceServiceOuterClass.DiscoverRsp =
  yandexcloud.datatransfer.dtextension.v0_2.source.DiscoverRspKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val yandexcloud.datatransfer.dtextension.v0_2.source.SourceServiceOuterClass.DiscoverRspOrBuilder.resultOrNull: yandexcloud.datatransfer.dtextension.v0_2.Common.Result?
  get() = if (hasResult()) getResult() else null

