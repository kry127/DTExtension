//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api/v0_2/sink/sink_service.proto

package yandexcloud.datatransfer.dtextension.v0_2.sink;

@kotlin.jvm.JvmName("-initializewriteReq")
public inline fun writeReq(block: yandexcloud.datatransfer.dtextension.v0_2.sink.WriteReqKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.sink.SinkServiceOuterClass.WriteReq =
  yandexcloud.datatransfer.dtextension.v0_2.sink.WriteReqKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.sink.SinkServiceOuterClass.WriteReq.newBuilder()).apply { block() }._build()
public object WriteReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: yandexcloud.datatransfer.dtextension.v0_2.sink.SinkServiceOuterClass.WriteReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.sink.SinkServiceOuterClass.WriteReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.sink.SinkServiceOuterClass.WriteReq = _builder.build()

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.sink.WriteControlItemReq control_item_req = 1;</code>
     */
    public var controlItemReq: yandexcloud.datatransfer.dtextension.v0_2.sink.Control.WriteControlItemReq
      @JvmName("getControlItemReq")
      get() = _builder.getControlItemReq()
      @JvmName("setControlItemReq")
      set(value) {
        _builder.setControlItemReq(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.sink.WriteControlItemReq control_item_req = 1;</code>
     */
    public fun clearControlItemReq() {
      _builder.clearControlItemReq()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.sink.WriteControlItemReq control_item_req = 1;</code>
     * @return Whether the controlItemReq field is set.
     */
    public fun hasControlItemReq(): kotlin.Boolean {
      return _builder.hasControlItemReq()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.sink.SinkServiceOuterClass.WriteReq.copy(block: yandexcloud.datatransfer.dtextension.v0_2.sink.WriteReqKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.sink.SinkServiceOuterClass.WriteReq =
  yandexcloud.datatransfer.dtextension.v0_2.sink.WriteReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val yandexcloud.datatransfer.dtextension.v0_2.sink.SinkServiceOuterClass.WriteReqOrBuilder.controlItemReqOrNull: yandexcloud.datatransfer.dtextension.v0_2.sink.Control.WriteControlItemReq?
  get() = if (hasControlItemReq()) getControlItemReq() else null

