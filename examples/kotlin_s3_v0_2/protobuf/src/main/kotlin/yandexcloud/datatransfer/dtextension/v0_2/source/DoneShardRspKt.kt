//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api/v0_2/source/control.proto

package yandexcloud.datatransfer.dtextension.v0_2.source;

@kotlin.jvm.JvmName("-initializedoneShardRsp")
public inline fun doneShardRsp(block: yandexcloud.datatransfer.dtextension.v0_2.source.DoneShardRspKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.source.Control.DoneShardRsp =
  yandexcloud.datatransfer.dtextension.v0_2.source.DoneShardRspKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.source.Control.DoneShardRsp.newBuilder()).apply { block() }._build()
public object DoneShardRspKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: yandexcloud.datatransfer.dtextension.v0_2.source.Control.DoneShardRsp.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.source.Control.DoneShardRsp.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.source.Control.DoneShardRsp = _builder.build()

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Result result = 1;</code>
     */
    public var result: yandexcloud.datatransfer.dtextension.v0_2.Common.Result
      @JvmName("getResult")
      get() = _builder.getResult()
      @JvmName("setResult")
      set(value) {
        _builder.setResult(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Result result = 1;</code>
     */
    public fun clearResult() {
      _builder.clearResult()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.Result result = 1;</code>
     * @return Whether the result field is set.
     */
    public fun hasResult(): kotlin.Boolean {
      return _builder.hasResult()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.source.Control.DoneShardRsp.copy(block: yandexcloud.datatransfer.dtextension.v0_2.source.DoneShardRspKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.source.Control.DoneShardRsp =
  yandexcloud.datatransfer.dtextension.v0_2.source.DoneShardRspKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val yandexcloud.datatransfer.dtextension.v0_2.source.Control.DoneShardRspOrBuilder.resultOrNull: yandexcloud.datatransfer.dtextension.v0_2.Common.Result?
  get() = if (hasResult()) getResult() else null

