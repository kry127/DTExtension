//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api/v0_2/data.proto

package yandexcloud.datatransfer.dtextension.v0_2;

@kotlin.jvm.JvmName("-initializeparquetValue")
public inline fun parquetValue(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue =
  yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.newBuilder()).apply { block() }._build()
public object ParquetValueKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue = _builder.build()

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetBool bool = 1;</code>
     */
    public var bool: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBool
      @JvmName("getBool")
      get() = _builder.getBool()
      @JvmName("setBool")
      set(value) {
        _builder.setBool(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetBool bool = 1;</code>
     */
    public fun clearBool() {
      _builder.clearBool()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetBool bool = 1;</code>
     * @return Whether the bool field is set.
     */
    public fun hasBool(): kotlin.Boolean {
      return _builder.hasBool()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetInt32 int32 = 2;</code>
     */
    public var int32: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt32
      @JvmName("getInt32")
      get() = _builder.getInt32()
      @JvmName("setInt32")
      set(value) {
        _builder.setInt32(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetInt32 int32 = 2;</code>
     */
    public fun clearInt32() {
      _builder.clearInt32()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetInt32 int32 = 2;</code>
     * @return Whether the int32 field is set.
     */
    public fun hasInt32(): kotlin.Boolean {
      return _builder.hasInt32()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetInt64 int64 = 3;</code>
     */
    public var int64: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt64
      @JvmName("getInt64")
      get() = _builder.getInt64()
      @JvmName("setInt64")
      set(value) {
        _builder.setInt64(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetInt64 int64 = 3;</code>
     */
    public fun clearInt64() {
      _builder.clearInt64()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetInt64 int64 = 3;</code>
     * @return Whether the int64 field is set.
     */
    public fun hasInt64(): kotlin.Boolean {
      return _builder.hasInt64()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetUInt32 uint32 = 4;</code>
     */
    public var uint32: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt32
      @JvmName("getUint32")
      get() = _builder.getUint32()
      @JvmName("setUint32")
      set(value) {
        _builder.setUint32(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetUInt32 uint32 = 4;</code>
     */
    public fun clearUint32() {
      _builder.clearUint32()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetUInt32 uint32 = 4;</code>
     * @return Whether the uint32 field is set.
     */
    public fun hasUint32(): kotlin.Boolean {
      return _builder.hasUint32()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetUInt64 uint64 = 5;</code>
     */
    public var uint64: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt64
      @JvmName("getUint64")
      get() = _builder.getUint64()
      @JvmName("setUint64")
      set(value) {
        _builder.setUint64(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetUInt64 uint64 = 5;</code>
     */
    public fun clearUint64() {
      _builder.clearUint64()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetUInt64 uint64 = 5;</code>
     * @return Whether the uint64 field is set.
     */
    public fun hasUint64(): kotlin.Boolean {
      return _builder.hasUint64()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetFloat float = 6;</code>
     */
    public var float: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetFloat
      @JvmName("getFloat")
      get() = _builder.getFloat()
      @JvmName("setFloat")
      set(value) {
        _builder.setFloat(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetFloat float = 6;</code>
     */
    public fun clearFloat() {
      _builder.clearFloat()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetFloat float = 6;</code>
     * @return Whether the float field is set.
     */
    public fun hasFloat(): kotlin.Boolean {
      return _builder.hasFloat()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetDouble double = 7;</code>
     */
    public var double: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDouble
      @JvmName("getDouble")
      get() = _builder.getDouble()
      @JvmName("setDouble")
      set(value) {
        _builder.setDouble(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetDouble double = 7;</code>
     */
    public fun clearDouble() {
      _builder.clearDouble()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetDouble double = 7;</code>
     * @return Whether the double field is set.
     */
    public fun hasDouble(): kotlin.Boolean {
      return _builder.hasDouble()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString json = 8;</code>
     */
    public var json: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString
      @JvmName("getJson")
      get() = _builder.getJson()
      @JvmName("setJson")
      set(value) {
        _builder.setJson(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString json = 8;</code>
     */
    public fun clearJson() {
      _builder.clearJson()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString json = 8;</code>
     * @return Whether the json field is set.
     */
    public fun hasJson(): kotlin.Boolean {
      return _builder.hasJson()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetDecimal decimal = 9;</code>
     */
    public var decimal: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDecimal
      @JvmName("getDecimal")
      get() = _builder.getDecimal()
      @JvmName("setDecimal")
      set(value) {
        _builder.setDecimal(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetDecimal decimal = 9;</code>
     */
    public fun clearDecimal() {
      _builder.clearDecimal()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetDecimal decimal = 9;</code>
     * @return Whether the decimal field is set.
     */
    public fun hasDecimal(): kotlin.Boolean {
      return _builder.hasDecimal()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString big_decimal = 10;</code>
     */
    public var bigDecimal: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString
      @JvmName("getBigDecimal")
      get() = _builder.getBigDecimal()
      @JvmName("setBigDecimal")
      set(value) {
        _builder.setBigDecimal(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString big_decimal = 10;</code>
     */
    public fun clearBigDecimal() {
      _builder.clearBigDecimal()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString big_decimal = 10;</code>
     * @return Whether the bigDecimal field is set.
     */
    public fun hasBigDecimal(): kotlin.Boolean {
      return _builder.hasBigDecimal()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString big_integer = 11;</code>
     */
    public var bigInteger: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString
      @JvmName("getBigInteger")
      get() = _builder.getBigInteger()
      @JvmName("setBigInteger")
      set(value) {
        _builder.setBigInteger(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString big_integer = 11;</code>
     */
    public fun clearBigInteger() {
      _builder.clearBigInteger()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString big_integer = 11;</code>
     * @return Whether the bigInteger field is set.
     */
    public fun hasBigInteger(): kotlin.Boolean {
      return _builder.hasBigInteger()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetInt64 unix_time = 12;</code>
     */
    public var unixTime: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt64
      @JvmName("getUnixTime")
      get() = _builder.getUnixTime()
      @JvmName("setUnixTime")
      set(value) {
        _builder.setUnixTime(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetInt64 unix_time = 12;</code>
     */
    public fun clearUnixTime() {
      _builder.clearUnixTime()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetInt64 unix_time = 12;</code>
     * @return Whether the unixTime field is set.
     */
    public fun hasUnixTime(): kotlin.Boolean {
      return _builder.hasUnixTime()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString iso_time = 13;</code>
     */
    public var isoTime: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString
      @JvmName("getIsoTime")
      get() = _builder.getIsoTime()
      @JvmName("setIsoTime")
      set(value) {
        _builder.setIsoTime(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString iso_time = 13;</code>
     */
    public fun clearIsoTime() {
      _builder.clearIsoTime()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString iso_time = 13;</code>
     * @return Whether the isoTime field is set.
     */
    public fun hasIsoTime(): kotlin.Boolean {
      return _builder.hasIsoTime()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString string = 14;</code>
     */
    public var string: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString
      @JvmName("getString")
      get() = _builder.getString()
      @JvmName("setString")
      set(value) {
        _builder.setString(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString string = 14;</code>
     */
    public fun clearString() {
      _builder.clearString()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetString string = 14;</code>
     * @return Whether the string field is set.
     */
    public fun hasString(): kotlin.Boolean {
      return _builder.hasString()
    }

    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetBytes binary = 15;</code>
     */
    public var binary: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBytes
      @JvmName("getBinary")
      get() = _builder.getBinary()
      @JvmName("setBinary")
      set(value) {
        _builder.setBinary(value)
      }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetBytes binary = 15;</code>
     */
    public fun clearBinary() {
      _builder.clearBinary()
    }
    /**
     * <code>.yandexcloud.datatransfer.dtextension.v0_2.ParquetValue.ParquetBytes binary = 15;</code>
     * @return Whether the binary field is set.
     */
    public fun hasBinary(): kotlin.Boolean {
      return _builder.hasBinary()
    }
    public val dataCase: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.DataCase
      @JvmName("getDataCase")
      get() = _builder.getDataCase()

    public fun clearData() {
      _builder.clearData()
    }
  }
  @kotlin.jvm.JvmName("-initializeparquetBool")
  public inline fun parquetBool(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetBoolKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBool =
    yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetBoolKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBool.newBuilder()).apply { block() }._build()
  public object ParquetBoolKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBool.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBool.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBool = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated bool values = 1;</code>
       */
       public val values: com.google.protobuf.kotlin.DslList<kotlin.Boolean, ValuesProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getValuesList()
        )
      /**
       * <code>repeated bool values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, ValuesProxy>.add(value: kotlin.Boolean) {
        _builder.addValues(value)
      }/**
       * <code>repeated bool values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, ValuesProxy>.plusAssign(value: kotlin.Boolean) {
        add(value)
      }/**
       * <code>repeated bool values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, ValuesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Boolean>) {
        _builder.addAllValues(values)
      }/**
       * <code>repeated bool values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Boolean>) {
        addAll(values)
      }/**
       * <code>repeated bool values = 1;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setValues")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, ValuesProxy>.set(index: kotlin.Int, value: kotlin.Boolean) {
        _builder.setValues(index, value)
      }/**
       * <code>repeated bool values = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, ValuesProxy>.clear() {
        _builder.clearValues()
      }}
  }
  @kotlin.jvm.JvmName("-initializeparquetInt32")
  public inline fun parquetInt32(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetInt32Kt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt32 =
    yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetInt32Kt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt32.newBuilder()).apply { block() }._build()
  public object ParquetInt32Kt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt32.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt32.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt32 = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated int32 values = 1;</code>
       */
       public val values: com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getValuesList()
        )
      /**
       * <code>repeated int32 values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>.add(value: kotlin.Int) {
        _builder.addValues(value)
      }/**
       * <code>repeated int32 values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>.plusAssign(value: kotlin.Int) {
        add(value)
      }/**
       * <code>repeated int32 values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
        _builder.addAllValues(values)
      }/**
       * <code>repeated int32 values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
        addAll(values)
      }/**
       * <code>repeated int32 values = 1;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setValues")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>.set(index: kotlin.Int, value: kotlin.Int) {
        _builder.setValues(index, value)
      }/**
       * <code>repeated int32 values = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>.clear() {
        _builder.clearValues()
      }}
  }
  @kotlin.jvm.JvmName("-initializeparquetInt64")
  public inline fun parquetInt64(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetInt64Kt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt64 =
    yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetInt64Kt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt64.newBuilder()).apply { block() }._build()
  public object ParquetInt64Kt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt64.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt64.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt64 = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated int64 values = 1;</code>
       */
       public val values: com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getValuesList()
        )
      /**
       * <code>repeated int64 values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>.add(value: kotlin.Long) {
        _builder.addValues(value)
      }/**
       * <code>repeated int64 values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>.plusAssign(value: kotlin.Long) {
        add(value)
      }/**
       * <code>repeated int64 values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Long>) {
        _builder.addAllValues(values)
      }/**
       * <code>repeated int64 values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Long>) {
        addAll(values)
      }/**
       * <code>repeated int64 values = 1;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setValues")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>.set(index: kotlin.Int, value: kotlin.Long) {
        _builder.setValues(index, value)
      }/**
       * <code>repeated int64 values = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>.clear() {
        _builder.clearValues()
      }}
  }
  @kotlin.jvm.JvmName("-initializeparquetUInt32")
  public inline fun parquetUInt32(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetUInt32Kt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt32 =
    yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetUInt32Kt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt32.newBuilder()).apply { block() }._build()
  public object ParquetUInt32Kt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt32.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt32.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt32 = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated uint32 values = 1;</code>
       */
       public val values: com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getValuesList()
        )
      /**
       * <code>repeated uint32 values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>.add(value: kotlin.Int) {
        _builder.addValues(value)
      }/**
       * <code>repeated uint32 values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>.plusAssign(value: kotlin.Int) {
        add(value)
      }/**
       * <code>repeated uint32 values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
        _builder.addAllValues(values)
      }/**
       * <code>repeated uint32 values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
        addAll(values)
      }/**
       * <code>repeated uint32 values = 1;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setValues")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>.set(index: kotlin.Int, value: kotlin.Int) {
        _builder.setValues(index, value)
      }/**
       * <code>repeated uint32 values = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValuesProxy>.clear() {
        _builder.clearValues()
      }}
  }
  @kotlin.jvm.JvmName("-initializeparquetUInt64")
  public inline fun parquetUInt64(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetUInt64Kt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt64 =
    yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetUInt64Kt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt64.newBuilder()).apply { block() }._build()
  public object ParquetUInt64Kt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt64.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt64.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt64 = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated int64 values = 1;</code>
       */
       public val values: com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getValuesList()
        )
      /**
       * <code>repeated int64 values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>.add(value: kotlin.Long) {
        _builder.addValues(value)
      }/**
       * <code>repeated int64 values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>.plusAssign(value: kotlin.Long) {
        add(value)
      }/**
       * <code>repeated int64 values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Long>) {
        _builder.addAllValues(values)
      }/**
       * <code>repeated int64 values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Long>) {
        addAll(values)
      }/**
       * <code>repeated int64 values = 1;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setValues")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>.set(index: kotlin.Int, value: kotlin.Long) {
        _builder.setValues(index, value)
      }/**
       * <code>repeated int64 values = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ValuesProxy>.clear() {
        _builder.clearValues()
      }}
  }
  @kotlin.jvm.JvmName("-initializeparquetFloat")
  public inline fun parquetFloat(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetFloatKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetFloat =
    yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetFloatKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetFloat.newBuilder()).apply { block() }._build()
  public object ParquetFloatKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetFloat.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetFloat.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetFloat = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated float values = 1;</code>
       */
       public val values: com.google.protobuf.kotlin.DslList<kotlin.Float, ValuesProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getValuesList()
        )
      /**
       * <code>repeated float values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Float, ValuesProxy>.add(value: kotlin.Float) {
        _builder.addValues(value)
      }/**
       * <code>repeated float values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, ValuesProxy>.plusAssign(value: kotlin.Float) {
        add(value)
      }/**
       * <code>repeated float values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Float, ValuesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
        _builder.addAllValues(values)
      }/**
       * <code>repeated float values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
        addAll(values)
      }/**
       * <code>repeated float values = 1;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setValues")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, ValuesProxy>.set(index: kotlin.Int, value: kotlin.Float) {
        _builder.setValues(index, value)
      }/**
       * <code>repeated float values = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Float, ValuesProxy>.clear() {
        _builder.clearValues()
      }}
  }
  @kotlin.jvm.JvmName("-initializeparquetDouble")
  public inline fun parquetDouble(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetDoubleKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDouble =
    yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetDoubleKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDouble.newBuilder()).apply { block() }._build()
  public object ParquetDoubleKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDouble.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDouble.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDouble = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated double values = 1;</code>
       */
       public val values: com.google.protobuf.kotlin.DslList<kotlin.Double, ValuesProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getValuesList()
        )
      /**
       * <code>repeated double values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Double, ValuesProxy>.add(value: kotlin.Double) {
        _builder.addValues(value)
      }/**
       * <code>repeated double values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, ValuesProxy>.plusAssign(value: kotlin.Double) {
        add(value)
      }/**
       * <code>repeated double values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Double, ValuesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Double>) {
        _builder.addAllValues(values)
      }/**
       * <code>repeated double values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Double>) {
        addAll(values)
      }/**
       * <code>repeated double values = 1;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setValues")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, ValuesProxy>.set(index: kotlin.Int, value: kotlin.Double) {
        _builder.setValues(index, value)
      }/**
       * <code>repeated double values = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Double, ValuesProxy>.clear() {
        _builder.clearValues()
      }}
  }
  @kotlin.jvm.JvmName("-initializeparquetString")
  public inline fun parquetString(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetStringKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString =
    yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetStringKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString.newBuilder()).apply { block() }._build()
  public object ParquetStringKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated string values = 1;</code>
       * @return A list containing the values.
       */
      public val values: com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getValuesList()
        )
      /**
       * <code>repeated string values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>.add(value: kotlin.String) {
        _builder.addValues(value)
      }
      /**
       * <code>repeated string values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>.plusAssign(value: kotlin.String) {
        add(value)
      }
      /**
       * <code>repeated string values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
        _builder.addAllValues(values)
      }
      /**
       * <code>repeated string values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
        addAll(values)
      }
      /**
       * <code>repeated string values = 1;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setValues")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>.set(index: kotlin.Int, value: kotlin.String) {
        _builder.setValues(index, value)
      }/**
       * <code>repeated string values = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearValues")
      public fun com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>.clear() {
        _builder.clearValues()
      }}
  }
  @kotlin.jvm.JvmName("-initializeparquetDecimal")
  public inline fun parquetDecimal(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetDecimalKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDecimal =
    yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetDecimalKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDecimal.newBuilder()).apply { block() }._build()
  public object ParquetDecimalKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDecimal.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDecimal.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDecimal = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Decimal values = 1;</code>
       */
       public val values: com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal, ValuesProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getValuesList()
        )
      /**
       * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Decimal values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addValues")
      public fun com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal, ValuesProxy>.add(value: yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal) {
        _builder.addValues(value)
      }
      /**
       * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Decimal values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal, ValuesProxy>.plusAssign(value: yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal) {
        add(value)
      }
      /**
       * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Decimal values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllValues")
      public fun com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal, ValuesProxy>.addAll(values: kotlin.collections.Iterable<yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal>) {
        _builder.addAllValues(values)
      }
      /**
       * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Decimal values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal>) {
        addAll(values)
      }
      /**
       * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Decimal values = 1;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setValues")
      public operator fun com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal, ValuesProxy>.set(index: kotlin.Int, value: yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal) {
        _builder.setValues(index, value)
      }
      /**
       * <code>repeated .yandexcloud.datatransfer.dtextension.v0_2.Decimal values = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearValues")
      public fun com.google.protobuf.kotlin.DslList<yandexcloud.datatransfer.dtextension.v0_2.Data.Decimal, ValuesProxy>.clear() {
        _builder.clearValues()
      }

    }
  }
  @kotlin.jvm.JvmName("-initializeparquetBytes")
  public inline fun parquetBytes(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetBytesKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBytes =
    yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetBytesKt.Dsl._create(yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBytes.newBuilder()).apply { block() }._build()
  public object ParquetBytesKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBytes.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBytes.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBytes = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated bytes values = 1;</code>
       */
       public val values: com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, ValuesProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getValuesList()
        )
      /**
       * <code>repeated bytes values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addValues")
      public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, ValuesProxy>.add(value: com.google.protobuf.ByteString) {
        _builder.addValues(value)
      }/**
       * <code>repeated bytes values = 1;</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, ValuesProxy>.plusAssign(value: com.google.protobuf.ByteString) {
        add(value)
      }/**
       * <code>repeated bytes values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllValues")
      public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, ValuesProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
        _builder.addAllValues(values)
      }/**
       * <code>repeated bytes values = 1;</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
        addAll(values)
      }/**
       * <code>repeated bytes values = 1;</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setValues")
      public operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, ValuesProxy>.set(index: kotlin.Int, value: com.google.protobuf.ByteString) {
        _builder.setValues(index, value)
      }/**
       * <code>repeated bytes values = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearValues")
      public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, ValuesProxy>.clear() {
        _builder.clearValues()
      }}
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.copy(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue =
  yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBool.copy(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetBoolKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBool =
  yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetBoolKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt32.copy(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetInt32Kt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt32 =
  yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetInt32Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt64.copy(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetInt64Kt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt64 =
  yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetInt64Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt32.copy(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetUInt32Kt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt32 =
  yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetUInt32Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt64.copy(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetUInt64Kt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt64 =
  yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetUInt64Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetFloat.copy(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetFloatKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetFloat =
  yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetFloatKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDouble.copy(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetDoubleKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDouble =
  yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetDoubleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString.copy(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetStringKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString =
  yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetStringKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDecimal.copy(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetDecimalKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDecimal =
  yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetDecimalKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBytes.copy(block: yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetBytesKt.Dsl.() -> kotlin.Unit): yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBytes =
  yandexcloud.datatransfer.dtextension.v0_2.ParquetValueKt.ParquetBytesKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.boolOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBool?
  get() = if (hasBool()) getBool() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.int32OrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt32?
  get() = if (hasInt32()) getInt32() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.int64OrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt64?
  get() = if (hasInt64()) getInt64() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.uint32OrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt32?
  get() = if (hasUint32()) getUint32() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.uint64OrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetUInt64?
  get() = if (hasUint64()) getUint64() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.floatOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetFloat?
  get() = if (hasFloat()) getFloat() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.doubleOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDouble?
  get() = if (hasDouble()) getDouble() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.jsonOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString?
  get() = if (hasJson()) getJson() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.decimalOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetDecimal?
  get() = if (hasDecimal()) getDecimal() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.bigDecimalOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString?
  get() = if (hasBigDecimal()) getBigDecimal() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.bigIntegerOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString?
  get() = if (hasBigInteger()) getBigInteger() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.unixTimeOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetInt64?
  get() = if (hasUnixTime()) getUnixTime() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.isoTimeOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString?
  get() = if (hasIsoTime()) getIsoTime() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.stringOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetString?
  get() = if (hasString()) getString() else null

val yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValueOrBuilder.binaryOrNull: yandexcloud.datatransfer.dtextension.v0_2.Data.ParquetValue.ParquetBytes?
  get() = if (hasBinary()) getBinary() else null

