// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: api/v0_2/source/read.proto

// Author: kry127
// Purpose: this file defines control messages that solve two problems:
//   1. At Least Once guarantee for data ingestion
//   2. Parallelization of snapshot process

package source

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v0_2 "kry127.ru/dtextension/go/pkg/api/v0_2"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Control item requests for snapshot process
type ReadCtlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to CtlReq:
	//	*ReadCtlReq_InitReq
	//	*ReadCtlReq_CursorReq
	//	*ReadCtlReq_ReadChangeReq
	//	*ReadCtlReq_BeginSnapshotReq
	//	*ReadCtlReq_DoneSnapshotReq
	CtlReq isReadCtlReq_CtlReq `protobuf_oneof:"ctl_req"`
}

func (x *ReadCtlReq) Reset() {
	*x = ReadCtlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_2_source_read_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCtlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCtlReq) ProtoMessage() {}

func (x *ReadCtlReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_2_source_read_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCtlReq.ProtoReflect.Descriptor instead.
func (*ReadCtlReq) Descriptor() ([]byte, []int) {
	return file_api_v0_2_source_read_proto_rawDescGZIP(), []int{0}
}

func (m *ReadCtlReq) GetCtlReq() isReadCtlReq_CtlReq {
	if m != nil {
		return m.CtlReq
	}
	return nil
}

func (x *ReadCtlReq) GetInitReq() *v0_2.InitReq {
	if x, ok := x.GetCtlReq().(*ReadCtlReq_InitReq); ok {
		return x.InitReq
	}
	return nil
}

func (x *ReadCtlReq) GetCursorReq() *CursorReq {
	if x, ok := x.GetCtlReq().(*ReadCtlReq_CursorReq); ok {
		return x.CursorReq
	}
	return nil
}

func (x *ReadCtlReq) GetReadChangeReq() *ReadChangeReq {
	if x, ok := x.GetCtlReq().(*ReadCtlReq_ReadChangeReq); ok {
		return x.ReadChangeReq
	}
	return nil
}

func (x *ReadCtlReq) GetBeginSnapshotReq() *BeginSnapshotReq {
	if x, ok := x.GetCtlReq().(*ReadCtlReq_BeginSnapshotReq); ok {
		return x.BeginSnapshotReq
	}
	return nil
}

func (x *ReadCtlReq) GetDoneSnapshotReq() *DoneSnapshotReq {
	if x, ok := x.GetCtlReq().(*ReadCtlReq_DoneSnapshotReq); ok {
		return x.DoneSnapshotReq
	}
	return nil
}

type isReadCtlReq_CtlReq interface {
	isReadCtlReq_CtlReq()
}

type ReadCtlReq_InitReq struct {
	InitReq *v0_2.InitReq `protobuf:"bytes,1,opt,name=init_req,json=initReq,proto3,oneof"`
}

type ReadCtlReq_CursorReq struct {
	CursorReq *CursorReq `protobuf:"bytes,2,opt,name=cursor_req,json=cursorReq,proto3,oneof"`
}

type ReadCtlReq_ReadChangeReq struct {
	ReadChangeReq *ReadChangeReq `protobuf:"bytes,3,opt,name=read_change_req,json=readChangeReq,proto3,oneof"`
}

type ReadCtlReq_BeginSnapshotReq struct {
	BeginSnapshotReq *BeginSnapshotReq `protobuf:"bytes,4,opt,name=begin_snapshot_req,json=beginSnapshotReq,proto3,oneof"`
}

type ReadCtlReq_DoneSnapshotReq struct {
	DoneSnapshotReq *DoneSnapshotReq `protobuf:"bytes,5,opt,name=done_snapshot_req,json=doneSnapshotReq,proto3,oneof"`
}

func (*ReadCtlReq_InitReq) isReadCtlReq_CtlReq() {}

func (*ReadCtlReq_CursorReq) isReadCtlReq_CtlReq() {}

func (*ReadCtlReq_ReadChangeReq) isReadCtlReq_CtlReq() {}

func (*ReadCtlReq_BeginSnapshotReq) isReadCtlReq_CtlReq() {}

func (*ReadCtlReq_DoneSnapshotReq) isReadCtlReq_CtlReq() {}

// Control item response for snapshot process
type ReadCtlRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to CtlRsp:
	//	*ReadCtlRsp_InitRsp
	//	*ReadCtlRsp_CursorRsp
	//	*ReadCtlRsp_ReadChangeRsp
	//	*ReadCtlRsp_BeginSnapshotRsp
	//	*ReadCtlRsp_DoneSnapshotRsp
	CtlRsp isReadCtlRsp_CtlRsp `protobuf_oneof:"ctl_rsp"`
}

func (x *ReadCtlRsp) Reset() {
	*x = ReadCtlRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_2_source_read_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCtlRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCtlRsp) ProtoMessage() {}

func (x *ReadCtlRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_2_source_read_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCtlRsp.ProtoReflect.Descriptor instead.
func (*ReadCtlRsp) Descriptor() ([]byte, []int) {
	return file_api_v0_2_source_read_proto_rawDescGZIP(), []int{1}
}

func (m *ReadCtlRsp) GetCtlRsp() isReadCtlRsp_CtlRsp {
	if m != nil {
		return m.CtlRsp
	}
	return nil
}

func (x *ReadCtlRsp) GetInitRsp() *v0_2.InitRsp {
	if x, ok := x.GetCtlRsp().(*ReadCtlRsp_InitRsp); ok {
		return x.InitRsp
	}
	return nil
}

func (x *ReadCtlRsp) GetCursorRsp() *CursorRsp {
	if x, ok := x.GetCtlRsp().(*ReadCtlRsp_CursorRsp); ok {
		return x.CursorRsp
	}
	return nil
}

func (x *ReadCtlRsp) GetReadChangeRsp() *ReadChangeRsp {
	if x, ok := x.GetCtlRsp().(*ReadCtlRsp_ReadChangeRsp); ok {
		return x.ReadChangeRsp
	}
	return nil
}

func (x *ReadCtlRsp) GetBeginSnapshotRsp() *BeginSnapshotRsp {
	if x, ok := x.GetCtlRsp().(*ReadCtlRsp_BeginSnapshotRsp); ok {
		return x.BeginSnapshotRsp
	}
	return nil
}

func (x *ReadCtlRsp) GetDoneSnapshotRsp() *DoneSnapshotRsp {
	if x, ok := x.GetCtlRsp().(*ReadCtlRsp_DoneSnapshotRsp); ok {
		return x.DoneSnapshotRsp
	}
	return nil
}

type isReadCtlRsp_CtlRsp interface {
	isReadCtlRsp_CtlRsp()
}

type ReadCtlRsp_InitRsp struct {
	InitRsp *v0_2.InitRsp `protobuf:"bytes,1,opt,name=init_rsp,json=initRsp,proto3,oneof"`
}

type ReadCtlRsp_CursorRsp struct {
	CursorRsp *CursorRsp `protobuf:"bytes,2,opt,name=cursor_rsp,json=cursorRsp,proto3,oneof"`
}

type ReadCtlRsp_ReadChangeRsp struct {
	ReadChangeRsp *ReadChangeRsp `protobuf:"bytes,3,opt,name=read_change_rsp,json=readChangeRsp,proto3,oneof"`
}

type ReadCtlRsp_BeginSnapshotRsp struct {
	BeginSnapshotRsp *BeginSnapshotRsp `protobuf:"bytes,4,opt,name=begin_snapshot_rsp,json=beginSnapshotRsp,proto3,oneof"`
}

type ReadCtlRsp_DoneSnapshotRsp struct {
	DoneSnapshotRsp *DoneSnapshotRsp `protobuf:"bytes,5,opt,name=done_snapshot_rsp,json=doneSnapshotRsp,proto3,oneof"`
}

func (*ReadCtlRsp_InitRsp) isReadCtlRsp_CtlRsp() {}

func (*ReadCtlRsp_CursorRsp) isReadCtlRsp_CtlRsp() {}

func (*ReadCtlRsp_ReadChangeRsp) isReadCtlRsp_CtlRsp() {}

func (*ReadCtlRsp_BeginSnapshotRsp) isReadCtlRsp_CtlRsp() {}

func (*ReadCtlRsp_DoneSnapshotRsp) isReadCtlRsp_CtlRsp() {}

// This message requests stream of data change item specified by cursor
type ReadChangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor *v0_2.Cursor `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *ReadChangeReq) Reset() {
	*x = ReadChangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_2_source_read_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadChangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadChangeReq) ProtoMessage() {}

func (x *ReadChangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_2_source_read_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadChangeReq.ProtoReflect.Descriptor instead.
func (*ReadChangeReq) Descriptor() ([]byte, []int) {
	return file_api_v0_2_source_read_proto_rawDescGZIP(), []int{2}
}

func (x *ReadChangeReq) GetCursor() *v0_2.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

// After receiving ReadChangeReq, server should produce series of ReadChangeRsp containing data in change_item
// field. When sequence of ReadChangeRsp ends from server side, server should send last ReadChangeRsp message
// with "checkpoint" message. The client should wait until this message until further actions.
type ReadChangeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ChangeStreamItem:
	//	*ReadChangeRsp_ChangeItem
	//	*ReadChangeRsp_Checkpoint
	ChangeStreamItem isReadChangeRsp_ChangeStreamItem `protobuf_oneof:"change_stream_item"`
}

func (x *ReadChangeRsp) Reset() {
	*x = ReadChangeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_2_source_read_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadChangeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadChangeRsp) ProtoMessage() {}

func (x *ReadChangeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_2_source_read_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadChangeRsp.ProtoReflect.Descriptor instead.
func (*ReadChangeRsp) Descriptor() ([]byte, []int) {
	return file_api_v0_2_source_read_proto_rawDescGZIP(), []int{3}
}

func (m *ReadChangeRsp) GetChangeStreamItem() isReadChangeRsp_ChangeStreamItem {
	if m != nil {
		return m.ChangeStreamItem
	}
	return nil
}

func (x *ReadChangeRsp) GetChangeItem() *v0_2.ChangeItem {
	if x, ok := x.GetChangeStreamItem().(*ReadChangeRsp_ChangeItem); ok {
		return x.ChangeItem
	}
	return nil
}

func (x *ReadChangeRsp) GetCheckpoint() *ReadChangeRsp_CheckPoint {
	if x, ok := x.GetChangeStreamItem().(*ReadChangeRsp_Checkpoint); ok {
		return x.Checkpoint
	}
	return nil
}

type isReadChangeRsp_ChangeStreamItem interface {
	isReadChangeRsp_ChangeStreamItem()
}

type ReadChangeRsp_ChangeItem struct {
	ChangeItem *v0_2.ChangeItem `protobuf:"bytes,1,opt,name=change_item,json=changeItem,proto3,oneof"`
}

type ReadChangeRsp_Checkpoint struct {
	Checkpoint *ReadChangeRsp_CheckPoint `protobuf:"bytes,2,opt,name=checkpoint,proto3,oneof"`
}

func (*ReadChangeRsp_ChangeItem) isReadChangeRsp_ChangeStreamItem() {}

func (*ReadChangeRsp_Checkpoint) isReadChangeRsp_ChangeStreamItem() {}

// This message is sent in order to acquire snapshot cursor
// that will iterate through snapshotting values
// note, that cursor value will be stored in general response
type CursorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This parameter designates preferred column for cursor
	PreferredColumn string `protobuf:"bytes,1,opt,name=preferred_column,json=preferredColumn,proto3" json:"preferred_column,omitempty"`
}

func (x *CursorReq) Reset() {
	*x = CursorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_2_source_read_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorReq) ProtoMessage() {}

func (x *CursorReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_2_source_read_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorReq.ProtoReflect.Descriptor instead.
func (*CursorReq) Descriptor() ([]byte, []int) {
	return file_api_v0_2_source_read_proto_rawDescGZIP(), []int{4}
}

func (x *CursorReq) GetPreferredColumn() string {
	if x != nil {
		return x.PreferredColumn
	}
	return ""
}

type CursorRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor *v0_2.Cursor `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"` // TODO add statistics
}

func (x *CursorRsp) Reset() {
	*x = CursorRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_2_source_read_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorRsp) ProtoMessage() {}

func (x *CursorRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_2_source_read_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorRsp.ProtoReflect.Descriptor instead.
func (*CursorRsp) Descriptor() ([]byte, []int) {
	return file_api_v0_2_source_read_proto_rawDescGZIP(), []int{5}
}

func (x *CursorRsp) GetCursor() *v0_2.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

// This message designates snapshot beginning
// When this message comes, source connector should designate bounds
// of transferring lines, or take read snapshot lock for consistency
type BeginSnapshotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BeginSnapshotReq) Reset() {
	*x = BeginSnapshotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_2_source_read_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginSnapshotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginSnapshotReq) ProtoMessage() {}

func (x *BeginSnapshotReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_2_source_read_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginSnapshotReq.ProtoReflect.Descriptor instead.
func (*BeginSnapshotReq) Descriptor() ([]byte, []int) {
	return file_api_v0_2_source_read_proto_rawDescGZIP(), []int{6}
}

type BeginSnapshotRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// this optional parameter is used to save snapshot state binary representation
	SnapshotState []byte `protobuf:"bytes,2,opt,name=snapshot_state,json=snapshotState,proto3" json:"snapshot_state,omitempty"`
}

func (x *BeginSnapshotRsp) Reset() {
	*x = BeginSnapshotRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_2_source_read_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginSnapshotRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginSnapshotRsp) ProtoMessage() {}

func (x *BeginSnapshotRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_2_source_read_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginSnapshotRsp.ProtoReflect.Descriptor instead.
func (*BeginSnapshotRsp) Descriptor() ([]byte, []int) {
	return file_api_v0_2_source_read_proto_rawDescGZIP(), []int{7}
}

func (x *BeginSnapshotRsp) GetSnapshotState() []byte {
	if x != nil {
		return x.SnapshotState
	}
	return nil
}

// This message designates a finish of snapshot
// Resources that might have been allocated during BeginSnapshotReq may be freed now
type DoneSnapshotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotState []byte `protobuf:"bytes,1,opt,name=snapshot_state,json=snapshotState,proto3" json:"snapshot_state,omitempty"`
}

func (x *DoneSnapshotReq) Reset() {
	*x = DoneSnapshotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_2_source_read_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoneSnapshotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoneSnapshotReq) ProtoMessage() {}

func (x *DoneSnapshotReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_2_source_read_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoneSnapshotReq.ProtoReflect.Descriptor instead.
func (*DoneSnapshotReq) Descriptor() ([]byte, []int) {
	return file_api_v0_2_source_read_proto_rawDescGZIP(), []int{8}
}

func (x *DoneSnapshotReq) GetSnapshotState() []byte {
	if x != nil {
		return x.SnapshotState
	}
	return nil
}

type DoneSnapshotRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DoneSnapshotRsp) Reset() {
	*x = DoneSnapshotRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_2_source_read_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoneSnapshotRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoneSnapshotRsp) ProtoMessage() {}

func (x *DoneSnapshotRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_2_source_read_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoneSnapshotRsp.ProtoReflect.Descriptor instead.
func (*DoneSnapshotRsp) Descriptor() ([]byte, []int) {
	return file_api_v0_2_source_read_proto_rawDescGZIP(), []int{9}
}

// CheckPoint message should advance cursor in order to retrieve new values,
// otherwise source may stuck sending the same values over and over again
type ReadChangeRsp_CheckPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor *v0_2.Cursor `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *ReadChangeRsp_CheckPoint) Reset() {
	*x = ReadChangeRsp_CheckPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_2_source_read_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadChangeRsp_CheckPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadChangeRsp_CheckPoint) ProtoMessage() {}

func (x *ReadChangeRsp_CheckPoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_2_source_read_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadChangeRsp_CheckPoint.ProtoReflect.Descriptor instead.
func (*ReadChangeRsp_CheckPoint) Descriptor() ([]byte, []int) {
	return file_api_v0_2_source_read_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ReadChangeRsp_CheckPoint) GetCursor() *v0_2.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

var File_api_v0_2_source_read_proto protoreflect.FileDescriptor

var file_api_v0_2_source_read_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x5f, 0x32, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2f, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x30, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x64, 0x74, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x5f, 0x32, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x15,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x5f, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x5f, 0x32, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x04, 0x0a, 0x0a, 0x52,
	0x65, 0x61, 0x64, 0x43, 0x74, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x4f, 0x0a, 0x08, 0x69, 0x6e, 0x69,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x64, 0x74, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x5f, 0x32, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x07, 0x69, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x5c, 0x0a, 0x0a, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x64, 0x74, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x5f, 0x32, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x09, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x69, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x64, 0x74, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x5f, 0x32, 0x2e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x72, 0x0a, 0x12, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x42, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x64, 0x74, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x5f, 0x32, 0x2e, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x6f, 0x0a, 0x11, 0x64, 0x6f, 0x6e, 0x65, 0x5f,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x64, 0x74,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x5f, 0x32, 0x2e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x6f, 0x6e, 0x65, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x74, 0x6c, 0x5f,
	0x72, 0x65, 0x71, 0x22, 0x96, 0x04, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x43, 0x74, 0x6c, 0x52,
	0x73, 0x70, 0x12, 0x4f, 0x0a, 0x08, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x72, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e,
	0x64, 0x74, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x5f, 0x32,
	0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x73, 0x70, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x69, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x72, 0x73,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x2e, 0x64, 0x74, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x30, 0x5f, 0x32, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x52, 0x73, 0x70, 0x48, 0x00, 0x52, 0x09, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x73,
	0x70, 0x12, 0x69, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x72, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x64, 0x74, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x30, 0x5f, 0x32, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x72,
	0x65, 0x61, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x73, 0x70, 0x12, 0x72, 0x0a, 0x12,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x72,
	0x73, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x2e, 0x64, 0x74, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x30, 0x5f, 0x32, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x6f, 0x0a, 0x11, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x5f, 0x72, 0x73, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x64, 0x74, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x5f, 0x32, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44,
	0x6f, 0x6e, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x0f, 0x64, 0x6f, 0x6e, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x73,
	0x70, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x74, 0x6c, 0x5f, 0x72, 0x73, 0x70, 0x22, 0x5a, 0x0a, 0x0d,
	0x52, 0x65, 0x61, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x49, 0x0a,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x64, 0x74, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x5f, 0x32, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0xc6, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x61,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x64, 0x74, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x5f, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x6c, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x2e, 0x64, 0x74, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x30, 0x5f, 0x32, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x1a, 0x57, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x49, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x64, 0x74, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x5f, 0x32, 0x2e, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x42, 0x14, 0x0a, 0x12, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x22, 0x36, 0x0a, 0x09, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x29,
	0x0a, 0x10, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0x56, 0x0a, 0x09, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x52, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x2e, 0x64, 0x74, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x30,
	0x5f, 0x32, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x22, 0x12, 0x0a, 0x10, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x22, 0x39, 0x0a, 0x10, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x38, 0x0a, 0x0f, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x6f,
	0x6e, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x42, 0x2e, 0x5a,
	0x2c, 0x6b, 0x72, 0x79, 0x31, 0x32, 0x37, 0x2e, 0x72, 0x75, 0x2f, 0x64, 0x74, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x30, 0x5f, 0x32, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v0_2_source_read_proto_rawDescOnce sync.Once
	file_api_v0_2_source_read_proto_rawDescData = file_api_v0_2_source_read_proto_rawDesc
)

func file_api_v0_2_source_read_proto_rawDescGZIP() []byte {
	file_api_v0_2_source_read_proto_rawDescOnce.Do(func() {
		file_api_v0_2_source_read_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v0_2_source_read_proto_rawDescData)
	})
	return file_api_v0_2_source_read_proto_rawDescData
}

var file_api_v0_2_source_read_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_v0_2_source_read_proto_goTypes = []interface{}{
	(*ReadCtlReq)(nil),               // 0: yandexcloud.datatransfer.dtextension.v0_2.source.ReadCtlReq
	(*ReadCtlRsp)(nil),               // 1: yandexcloud.datatransfer.dtextension.v0_2.source.ReadCtlRsp
	(*ReadChangeReq)(nil),            // 2: yandexcloud.datatransfer.dtextension.v0_2.source.ReadChangeReq
	(*ReadChangeRsp)(nil),            // 3: yandexcloud.datatransfer.dtextension.v0_2.source.ReadChangeRsp
	(*CursorReq)(nil),                // 4: yandexcloud.datatransfer.dtextension.v0_2.source.CursorReq
	(*CursorRsp)(nil),                // 5: yandexcloud.datatransfer.dtextension.v0_2.source.CursorRsp
	(*BeginSnapshotReq)(nil),         // 6: yandexcloud.datatransfer.dtextension.v0_2.source.BeginSnapshotReq
	(*BeginSnapshotRsp)(nil),         // 7: yandexcloud.datatransfer.dtextension.v0_2.source.BeginSnapshotRsp
	(*DoneSnapshotReq)(nil),          // 8: yandexcloud.datatransfer.dtextension.v0_2.source.DoneSnapshotReq
	(*DoneSnapshotRsp)(nil),          // 9: yandexcloud.datatransfer.dtextension.v0_2.source.DoneSnapshotRsp
	(*ReadChangeRsp_CheckPoint)(nil), // 10: yandexcloud.datatransfer.dtextension.v0_2.source.ReadChangeRsp.CheckPoint
	(*v0_2.InitReq)(nil),             // 11: yandexcloud.datatransfer.dtextension.v0_2.InitReq
	(*v0_2.InitRsp)(nil),             // 12: yandexcloud.datatransfer.dtextension.v0_2.InitRsp
	(*v0_2.Cursor)(nil),              // 13: yandexcloud.datatransfer.dtextension.v0_2.Cursor
	(*v0_2.ChangeItem)(nil),          // 14: yandexcloud.datatransfer.dtextension.v0_2.ChangeItem
}
var file_api_v0_2_source_read_proto_depIdxs = []int32{
	11, // 0: yandexcloud.datatransfer.dtextension.v0_2.source.ReadCtlReq.init_req:type_name -> yandexcloud.datatransfer.dtextension.v0_2.InitReq
	4,  // 1: yandexcloud.datatransfer.dtextension.v0_2.source.ReadCtlReq.cursor_req:type_name -> yandexcloud.datatransfer.dtextension.v0_2.source.CursorReq
	2,  // 2: yandexcloud.datatransfer.dtextension.v0_2.source.ReadCtlReq.read_change_req:type_name -> yandexcloud.datatransfer.dtextension.v0_2.source.ReadChangeReq
	6,  // 3: yandexcloud.datatransfer.dtextension.v0_2.source.ReadCtlReq.begin_snapshot_req:type_name -> yandexcloud.datatransfer.dtextension.v0_2.source.BeginSnapshotReq
	8,  // 4: yandexcloud.datatransfer.dtextension.v0_2.source.ReadCtlReq.done_snapshot_req:type_name -> yandexcloud.datatransfer.dtextension.v0_2.source.DoneSnapshotReq
	12, // 5: yandexcloud.datatransfer.dtextension.v0_2.source.ReadCtlRsp.init_rsp:type_name -> yandexcloud.datatransfer.dtextension.v0_2.InitRsp
	5,  // 6: yandexcloud.datatransfer.dtextension.v0_2.source.ReadCtlRsp.cursor_rsp:type_name -> yandexcloud.datatransfer.dtextension.v0_2.source.CursorRsp
	3,  // 7: yandexcloud.datatransfer.dtextension.v0_2.source.ReadCtlRsp.read_change_rsp:type_name -> yandexcloud.datatransfer.dtextension.v0_2.source.ReadChangeRsp
	7,  // 8: yandexcloud.datatransfer.dtextension.v0_2.source.ReadCtlRsp.begin_snapshot_rsp:type_name -> yandexcloud.datatransfer.dtextension.v0_2.source.BeginSnapshotRsp
	9,  // 9: yandexcloud.datatransfer.dtextension.v0_2.source.ReadCtlRsp.done_snapshot_rsp:type_name -> yandexcloud.datatransfer.dtextension.v0_2.source.DoneSnapshotRsp
	13, // 10: yandexcloud.datatransfer.dtextension.v0_2.source.ReadChangeReq.cursor:type_name -> yandexcloud.datatransfer.dtextension.v0_2.Cursor
	14, // 11: yandexcloud.datatransfer.dtextension.v0_2.source.ReadChangeRsp.change_item:type_name -> yandexcloud.datatransfer.dtextension.v0_2.ChangeItem
	10, // 12: yandexcloud.datatransfer.dtextension.v0_2.source.ReadChangeRsp.checkpoint:type_name -> yandexcloud.datatransfer.dtextension.v0_2.source.ReadChangeRsp.CheckPoint
	13, // 13: yandexcloud.datatransfer.dtextension.v0_2.source.CursorRsp.cursor:type_name -> yandexcloud.datatransfer.dtextension.v0_2.Cursor
	13, // 14: yandexcloud.datatransfer.dtextension.v0_2.source.ReadChangeRsp.CheckPoint.cursor:type_name -> yandexcloud.datatransfer.dtextension.v0_2.Cursor
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_v0_2_source_read_proto_init() }
func file_api_v0_2_source_read_proto_init() {
	if File_api_v0_2_source_read_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v0_2_source_read_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadCtlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_2_source_read_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadCtlRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_2_source_read_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadChangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_2_source_read_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadChangeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_2_source_read_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_2_source_read_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_2_source_read_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginSnapshotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_2_source_read_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginSnapshotRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_2_source_read_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoneSnapshotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_2_source_read_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoneSnapshotRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_2_source_read_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadChangeRsp_CheckPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v0_2_source_read_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ReadCtlReq_InitReq)(nil),
		(*ReadCtlReq_CursorReq)(nil),
		(*ReadCtlReq_ReadChangeReq)(nil),
		(*ReadCtlReq_BeginSnapshotReq)(nil),
		(*ReadCtlReq_DoneSnapshotReq)(nil),
	}
	file_api_v0_2_source_read_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ReadCtlRsp_InitRsp)(nil),
		(*ReadCtlRsp_CursorRsp)(nil),
		(*ReadCtlRsp_ReadChangeRsp)(nil),
		(*ReadCtlRsp_BeginSnapshotRsp)(nil),
		(*ReadCtlRsp_DoneSnapshotRsp)(nil),
	}
	file_api_v0_2_source_read_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ReadChangeRsp_ChangeItem)(nil),
		(*ReadChangeRsp_Checkpoint)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v0_2_source_read_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v0_2_source_read_proto_goTypes,
		DependencyIndexes: file_api_v0_2_source_read_proto_depIdxs,
		MessageInfos:      file_api_v0_2_source_read_proto_msgTypes,
	}.Build()
	File_api_v0_2_source_read_proto = out.File
	file_api_v0_2_source_read_proto_rawDesc = nil
	file_api_v0_2_source_read_proto_goTypes = nil
	file_api_v0_2_source_read_proto_depIdxs = nil
}
